buildscript {
    ext {
        versions = ext {
            shadow = '4.0.3'
            junit = '5.3.2'
            kotlin = '1.3.11'
            exposed = '0.10.4'
            ktor = '1.0.0-beta-3'
            logback = '1.2.3'
            janio = '3.0.11'

            springBoot = '2.0.3.RELEASE'
            springCloud = 'Finchley.SR1'
            springCloudStream = 'Fishtown.M1'
            kafkaBinder = '2.0.1.RELEASE'

            selenium = '3.13.0'
            nanoHttpd = '2.3.1'

            tomcat = '9.0.10'
            mysql = '8.0.11'
            h2 = '1.4.197'
            flyway = '5.1.4'

            assertj = '3.11.1'
            mockk = '1.8.6'
            kotlintest = '3.1.11'

            jackson = '2.9.6'

            carbon = ext {
                validation = '0.4'
            }
        }
        boms = ext {
            rdb = {
                it.implementation "org.jetbrains.exposed:exposed:$versions.exposed"
                it.implementation "org.apache.tomcat:tomcat-jdbc:$versions.tomcat"
                it.implementation "mysql:mysql-connector-java:$versions.mysql"
                it.testImplementation "com.h2database:h2:$versions.h2"
            }
            webdriver = {
                it.implementation "org.seleniumhq.selenium:selenium-java:$versions.selenium"
                it.implementation "org.seleniumhq.selenium:selenium-chrome-driver:$versions.selenium"
                it.testImplementation "org.nanohttpd:nanohttpd:$versions.nanoHttpd"
            }
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$versions.springBoot"
        classpath "com.github.jengelman.gradle.plugins:shadow:$versions.shadow"
    }
}

allprojects {

    group = 'org.carbon.crawler'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'http://kotlin.bintray.com/ktor'
        }
        maven {
            url 'https://dl.bintray.com/kotlin/exposed'
        }
        maven {
            url 'http://repo.spring.io/libs-release'
        }
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        maven {
            url 'https://shotaod.github.io/maven/release'
        }
    }
}

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
            exceptionFormat 'full'
        }
    }

    // code coverage
    jacocoTestReport {
        additionalSourceDirs.from(
            files(subprojects.sourceSets.main.allSource.srcDirs)
        )
        additionalClassDirs.from(
            files(subprojects.sourceSets.main.output)
        )
        onlyIf { true }
    }

    dependencies {
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
        implementation "ch.qos.logback:logback-classic:$versions.logback"
        implementation "org.codehaus.janino:janino:$versions.janio"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
        testImplementation "io.kotlintest:kotlintest-assertions:$versions.kotlintest"
        // with intellij not working
        // testImplementation "io.kotlintest:kotlintest-runner-junit5:$versions.kotlintest"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
    }
}